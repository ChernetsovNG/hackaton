Прототип решения представляет собой клиент-приложение, обеспечивающие получение информации о транзакциях клиентов из внешних источников, и выполняющее расчёт бонусов в соответствии с заданными правилами. 

Правила начисления описываются в виде так называемых "стратегий". К клиенту привязывается тарифный план, содержащий в себе одну или несколько стратегий. Стратегии делятся на 2 типа:
- "мгновенные" стратегии;
- агрегирующие стратегии.
Первые осуществляют расчёт бонусов непосредственно после сохранения транзакции в БД приложения. Вторые запускаются по заданному расписанию, и агрегируют информацию о транзакциях клиентов за заданный период, и в соответствии с этим начисляют бонусы.
При получении транзакции выполняется расчёт по всем "мгновенным" стратегиям, и из полученных результатов выбирается максимальное значение бонуса (наиболее выгодное для клиента). 

Стратегии описываются в формате JSON определённого формата, который сохраняется в объекте стратегии в базе данных. 

Рассчитанные бонусы сохраняют в себе ссылки на транзакции, по которым они вычислены, и стратегии, по которым они начислены (для возможности последующего анализа). 

Приложение поддерживает 2 источника поступления транзакций: REST API для внешних систем, возможность считывания файла - реестра с транзакциями. 

Вся основная информация (транзакции, бонусы, стратегии, тарифные планы) - сохраняются в БД.
Для отделения сервиса по получению транзакций от сервиса по расчёту бонусов используется система обмена сообщениями (Kafka).

Backend - Java, Spring Boot, PostgreSQL, Kafka
Frontend - React

Из условий задачи реализованы следующие:
- возможность расчёта бонусов в зависимости от оборота пользователя за заданный период, от количества операций за заданный период, учёт ограничений по MCC, ограничение максимального и минимального размера вознаграждения для пользователя, возможность добавить заданный срок жизни бонусов.